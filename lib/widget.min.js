var Lang = function() {
    var o = {
      Afrikaans : "af",
      Albanian : "sq",
      Amharic : "am",
      Arabic : "ar",
      Armenian : "hy",
      Azeerbaijani : "az",
      Basque : "eu",
      Belarusian : "be",
      Bengali : "bn",
      Bosnian : "bs",
      Bulgarian : "bg",
      Catalan : "ca",
      Cebuano : "ceb",
      Chichewa : "ny",
      "Chinese (Simplified)" : "zh-CN",
      "Chinese (Traditional)" : "zh-TW",
      Corsican : "co",
      Croatian : "hr",
      Czech : "cs",
      Danish : "da",
      Dutch : "nl",
      English : "en",
      Esperanto : "eo",
      Estonian : "et",
      Filipino : "tl",
      Finnish : "fi",
      French : "fr",
      Frisian : "fy",
      Galician : "gl",
      Georgian : "ka",
      German : "de",
      Greek : "el",
      Gujarati : "gu",
      "Haitian Creole" : "ht",
      Hausa : "ha",
      Hawaiian : "haw",
      Hebrew : "iw",
      Hindi : "hi",
      Hmong : "hmn",
      Hungarian : "hu",
      Icelandic : "is",
      Igbo : "ig",
      Indonesian : "id",
      Irish : "ga",
      Italian : "it",
      Japanese : "ja",
      Javanese : "jw",
      Kannada : "kn",
      Kazakh : "kk",
      Khmer : "km",
      Korean : "ko",
      Kurdish : "ku",
      Kyrgyz : "ky",
      Lao : "lo",
      Latin : "la",
      Latvian : "lv",
      Lithuanian : "lt",
      Luxembourgish : "lb",
      Macedonian : "mk",
      Malagasy : "mg",
      Malay : "ms",
      Malayalam : "ml",
      Maltese : "mt",
      Maori : "mi",
      Marathi : "mr",
      Mongolian : "mn",
      Burmese : "my",
      Nepali : "ne",
      Norwegian : "no",
      Pashto : "ps",
      Persian : "fa",
      Polish : "pl",
      Portuguese : "pt",
      Punjabi : "ma",
      Romanian : "ro",
      Russian : "ru",
      Samoan : "sm",
      "Scots Gaelic" : "gd",
      Serbian : "sr",
      Sesotho : "st",
      Shona : "sn",
      Sindhi : "sd",
      Sinhala : "si",
      Slovak : "sk",
      Slovenian : "sl",
      Somali : "so",
      Spanish : "es",
      Sundanese : "su",
      Swahili : "sw",
      Swedish : "sv",
      Tajik : "tg",
      Tamil : "ta",
      Telugu : "te",
      Thai : "th",
      Turkish : "tr",
      Ukrainian : "uk",
      Urdu : "ur",
      Uzbek : "uz",
      Vietnamese : "vi",
      Welsh : "cy",
      Xhosa : "xh",
      Yiddish : "yi",
      Yoruba : "yo",
      Zulu : "zu"
    };
    return{
      /**
       * @return {?}
       */
      getAll : function() {
        return o;
      }
    };
  }();
  var Prefix = function() {
    /** @type {string} */
    var id = "";
    /**
     * @param {string} _id
     * @return {undefined}
     */
    var init = function(_id) {
      /** @type {string} */
      id = _id;
    };
    /**
     * @param {string} url
     * @return {?}
     */
    var get = function(url) {
      return id + "-" + url;
    };
    return{
      /** @type {function (string): undefined} */
      init : init,
      /** @type {function (string): ?} */
      _ : get,
      /** @type {function (string): ?} */
      get : get,
      /**
       * @param {string} el
       * @return {?}
       */
      id : function(el) {
        return "#" + get(el);
      },
      /**
       * @param {string} content
       * @return {?}
       */
      cc : function(content) {
        return "." + get(content);
      },
      /**
       * @param {string} name
       * @return {?}
       */
      data : function(name) {
        return id + "_" + name.replace(/-/g, "_");
      }
    };
  }();
  Prefix.init("sfl");
  var WidgetHelpers = function() {
    return{
      /**
       * @param {Object} obj
       * @return {undefined}
       */
      resize : function(obj) {
        if (!obj) {
          obj = {};
        }
        if ("undefined" == typeof Prefix) {
          Prefix = {
            /**
             * @param {string} url
             * @return {?}
             */
            get : function(url) {
              return url;
            }
          };
        }
        var response = {
          width : obj.width ? obj.width : document.body.offsetWidth,
          height : obj.height ? obj.height : document.body.offsetHeight
        };
        if (obj.extraHeight) {
          response.height += obj.extraHeight + 10;
        }
        if (obj.heightOnly) {
          delete response.width;
        }
        window.parent.postMessage({
          cmd : Prefix.get("widget.resize"),
          data : response
        }, "*");
      }
    };
  }();
  (function() {
    /**
     * @return {undefined}
     */
    var link = function() {
      synchronize(function(s) {
        initialize();
        create(s);
        success("widget.ready");
        WidgetHelpers.resize();
        setTimeout(WidgetHelpers.resize, 1300);
      });
    };
    /**
     * @param {Function} callback
     * @return {undefined}
     */
    var synchronize = function(callback) {
      chrome.runtime.sendMessage({
        cmd : "settings.get"
      }, function(basis) {
        callback(basis);
      });
    };
    /**
     * @return {undefined}
     */
    var initialize = function() {
      window.addEventListener("message", function(elem) {
        /** @type {string} */
        var options = elem.data;
        if ("object" == typeof options) {
          var out = options.cmd;
          options.data;
          if (out) {
            if ("resize" === (out = out.replace(Prefix.get(""), ""))) {
              WidgetHelpers.resize();
            }
          }
        }
      }, false);
    };
    /**
     * @param {Object} settings
     * @return {undefined}
     */
    var create = function(settings) {
      init("settings");
      /** @type {string} */
      $("#toggle-extension")[0].dataset.state = settings.enabled ? "on" : "off";
      $(".store-link").attr("href", "https://chrome.google.com/webstore/detail/" + chrome.runtime.id);
      $(".toggle-button").click(function() {
        /** @type {string} */
        this.dataset.state = "on" === this.dataset.state ? "off" : "on";
      });
      $("#toggle-extension").click(function() {
        chrome.runtime.sendMessage({
          cmd : "settings.set",
          data : {
            key : "enabled",
            value : "on" === this.dataset.state
          }
        });
      });
      var output = map();
      var lineSeparator = $('<select id="input-lng-from">').html(output).val(settings.direction.from);
      var navTabs = $('<select id="input-lng-to">').html(output).val(settings.direction.to);
      $(".dir-container").append(lineSeparator).append('<span class="arrow">&rarr;</span>').append(navTabs);
      $(".close, .close-btn").click(function(dataAndEvents) {
        success("widget.close");
      });
      $("select").change(function() {
        var headers = settings.direction;
        headers[this.id.replace("input-lng-", "")] = this.value;
        chrome.runtime.sendMessage({
          cmd : "settings.set",
          data : {
            key : "direction",
            value : headers
          }
        });
      });
      $(".btn-view").click(function() {
        init(this.dataset.view);
      });
    };
    /**
     * @param {string} app
     * @return {undefined}
     */
    var init = function(app) {
      $(".view").addClass("hidden");
      $(".view-" + app).removeClass("hidden");
      setTimeout(function() {
        WidgetHelpers.resize();
      }, 0);
    };
    /**
     * @param {?} min2
     * @return {?}
     */
    var map = function(min2) {
      var scrubbed = Lang.getAll();
      /** @type {string} */
      var optsData = "";
      return Object.keys(scrubbed).sort().map(function(name) {
        optsData += '<option value="' + scrubbed[name] + '">' + name + "</option>";
      }), optsData;
    };
    /**
     * @param {string} url
     * @param {Object} products
     * @return {undefined}
     */
    var success = function(url, products) {
      window.parent.postMessage({
        cmd : Prefix.get(url),
        data : products
      }, "*");
    };
    return{
      /** @type {function (): undefined} */
      init : link
    };
  })().init();
  